# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14Qg-S7HeBs453gqbtBugOyOSpfB6OoMa
"""

#1
import pandas as pd
df= pd.read_excel('Walmart_Dataset Python_Final_Assessment.xlsx')
df.describe()
df.dropna()

df['Year'] = pd.DatetimeIndex(df['Order Date']).year
#df['year'] = pd.DatetimeIndex(df['Date Attribute']).year

df.describe()

#2
missing_values = df.isnull()
print(missing_values)
df= df.dropna()

mean_value = df['Sales'].mean()
df = df['Sales'].fillna(mean_value)

mean_value_profit = df['Profit'].mean()
df = df['Profit'].fillna(mean_value)

print(df.isnull().sum())
print(df.isnull().sum())

#3

import pandas as pd
numerical_columns = df.select_dtypes(include=['int64', 'float64'])
numerical_stats = numerical_columns.describe()
mode_values = numerical_columns.mode().iloc[0]
range_values = numerical_columns.max() - numerical_columns.min()
variance_values = numerical_columns.var()
std_dev_values = numerical_columns.std()

print("Descriptive Statistics:")
print(numerical_stats)
print("\nMode:")
print(mode_values)
print("\nRange:")
print(range_values)
print("\nVariance:")
print(variance_values)
print("\nStandard Deviation:")
print(std_dev_values)

#4 Visualization
import matplotlib.pyplot as plt
import seaborn as sns

for column in df.select_dtypes(include=['int64', 'float64']):
    plt.figure(figsize=(8, 6))
    sns.histplot(data=df, x=column, kde=True)
    plt.title(f'Histogram of {column}')
    plt.xlabel(column)
    plt.ylabel('Frequency')
    plt.show()

# Bar charts for all numerical columns
for column in df.select_dtypes(include=['int64', 'float64']):
    plt.figure(figsize=(8, 6))
    sns.barplot(data=df, x=df.index, y=column)
    plt.title(f'Bar Chart of {column}')
    plt.xlabel('Index')
    plt.ylabel(column)
    plt.show()


sns.pairplot(df.select_dtypes(include=['int64', 'float64']))
plt.suptitle('Pairplot of Numerical Columns')
plt.show()


for column in df.select_dtypes(include=['int64', 'float64']):
    plt.figure(figsize=(8, 6))
    sns.boxplot(data=df, y=column)
    plt.title(f'Box Plot of {column}')
    plt.ylabel(column)
    plt.show()


for column in df.select_dtypes(include=['int64', 'float64']):
    plt.figure(figsize=(8, 6))
    df[column].plot.pie(autopct='%1.1f%%', startangle=140)
    plt.title(f'Pie Chart of {column}')
    plt.ylabel('')
    plt.show()

#5 Correlation
import pandas as pd


numerical_columns = df.select_dtypes(include=['int64', 'float64'])


correlation_matrix = numerical_columns.corr()


print("Correlation Matrix:")
print(correlation_matrix)

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


numerical_columns = df.select_dtypes(include=['int64', 'float64'])


correlation_matrix = numerical_columns.corr()


plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5)
plt.title('Correlation Matrix Heatmap')
plt.show()

#6 Detecting and identifying Outliers based on box plot
import seaborn as sns
import matplotlib.pyplot as plt


numerical_columns = df.select_dtypes(include=['int64', 'float64'])


plt.figure(figsize=(12, 8))
sns.boxplot(data=numerical_columns)
plt.title('Box Plot of Numerical Columns')
plt.xticks(rotation=45)
plt.show()

# trend analysis

import pandas as pd
import matplotlib.pyplot as plt


df['Year'] = df['Order Date'].dt.year


yearly_data = df.groupby('Year').agg({'Sales': 'sum', 'Profit': 'sum'}).reset_index()


plt.figure(figsize=(10, 6))
plt.plot(yearly_data['Year'], yearly_data['Sales'], marker='o', label='Sales')
plt.plot(yearly_data['Year'], yearly_data['Profit'], marker='o', label='Profit')
plt.xlabel('Year')
plt.ylabel('Amount')
plt.title('Sales and Profit Trends Over the Years')
plt.legend()
plt.grid(True)
plt.show()

"""Insights on the above graph indicate that sales has grown exponentially over the the period of 2012-2014. The profits has increased over the period of 2013-2014 on a mrginal outgrowth"""

#7 Product Category with highest growth
category_sales = df.groupby(['Year', 'Category'])['Sales'].sum().reset_index()


category_sales['Sales Growth'] = category_sales.groupby('Category')['Sales'].pct_change()


most_growth_category = category_sales.loc[category_sales['Sales Growth'].idxmax()]

print("Product Category with the Highest Growth in Terms of Sales:")
print(most_growth_category)

df.groupby('Category')['Quantity'].sum().reset_index()

import seaborn as sns
import matplotlib.pyplot as plt


plt.figure(figsize=(10, 6))
sns.lineplot(data=category_sales, x='Year', y='Sales Growth', hue='Category', marker='o')
plt.title('Sales Growth Rate by Product Category Over the Years')
plt.xlabel('Year')
plt.ylabel('Sales Growth Rate')
plt.legend(title='Product Category', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(True)
plt.show()

#We can see that supplies category jas the highest growth in terms of sales from a statistical view point as well as the visulization point of view

# Customer Analysis
import seaborn as sns
import matplotlib.pyplot as plt


customer_data = df.groupby('EmailID').agg({'Order ID': 'nunique', 'Sales': 'sum'}).reset_index()
customer_data.columns = ['EmailID', 'Number of Orders', 'Total Sales']


customer_data.sort_values(by=['Number of Orders', 'Total Sales'], ascending=False, inplace=True)


top_5_customers = customer_data.head(5)


plt.figure(figsize=(12, 6))


plt.subplot(1, 2, 1)
sns.barplot(data=top_5_customers, x='Number of Orders', y='EmailID', palette='Blues_d')
plt.title('Top 5 Customers by Number of Orders')
plt.xlabel('Number of Orders')
plt.ylabel('Customer EmailID')


plt.subplot(1, 2, 2)
sns.barplot(data=top_5_customers, x='Total Sales', y='EmailID', palette='Greens_d')
plt.title('Top 5 Customers by Total Sales')
plt.xlabel('Total Sales')
plt.ylabel('Customer EmailID')

plt.tight_layout()
plt.show()


# Repeat Purchase Behaviour
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np


plt.figure(figsize=(12, 8))
sns.barplot(data=customer_avg_time, x='EmailID', y='Time Between Orders', estimator=np.mean)
plt.title('Average Time Between Orders for Each Customer')
plt.xlabel('Customer EmailID')
plt.ylabel('Average Time Between Orders')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()


print(customer_avg_time)



#Comprehensive Analysis:
"""Demand Forecasting: Use historical sales data to forecast demand accurately. By understanding demand patterns, you can optimize inventory levels, reduce stockouts, and minimize excess inventory.

Inventory Management: Implement just-in-time (JIT) inventory management practices to reduce holding costs and improve inventory turnover. Utilize inventory optimization techniques to determine optimal stock levels for each product based on sales velocity and lead times.

Supplier Relationship Management: Build strong relationships with suppliers and negotiate favorable terms to ensure timely delivery of raw materials and components. Collaborate closely with suppliers to identify opportunities for cost savings and process improvements.

Warehouse Optimization: Optimize warehouse layout and workflow to minimize picking and packing times, reduce errors, and increase throughput. Implement warehouse management systems (WMS) and automated technologies to improve efficiency and accuracy.

Transportation Optimization: Optimize transportation routes and modes to reduce transportation costs and improve delivery times. Use route optimization software and real-time tracking systems to optimize delivery schedules and monitor shipment status.

Order Fulfillment Efficiency: Streamline order fulfillment processes to reduce order processing times and improve customer satisfaction. Utilize order management systems (OMS) and automated order processing technologies to streamline order processing and fulfillment.

Data Analytics and Insights: Leverage data analytics tools and techniques to gain actionable insights from sales velocity and order fulfillment data. Analyze key performance indicators (KPIs) such as order lead time, order cycle time, and order accuracy to identify areas for improvement.

Continuous Improvement: Foster a culture of continuous improvement within the organization. Encourage feedback from employees and stakeholders, and implement regular performance reviews and process audits to identify opportunities for optimization and innovation.

Risk Management: Identify and mitigate risks that could disrupt supply chain operations, such as supplier disruptions, transportation delays, and demand fluctuations. Develop contingency plans and resilience strategies to minimize the impact of unforeseen events.

Sustainability Initiatives: Incorporate sustainability initiatives into supply chain operations to reduce environmental impact and improve corporate social responsibility. Implement eco-friendly practices such as reducing packaging waste, optimizing transportation routes, and sourcing materials responsibly.



Population Density: Areas with higher population densities tend to have more potential customers, leading to higher sales volumes. Marketing strategies can be tailored to target densely populated areas with a focus on reaching a larger audience.

Income Levels: Income levels play a significant role in purchasing power and consumer behavior. Areas with higher income levels may have a greater propensity to spend on certain products or services. Marketing strategies can be adjusted to target affluent areas with premium offerings or personalized marketing campaigns.

Demographic Profiles: Demographic factors such as age, gender, ethnicity, and household composition can influence consumer preferences and purchasing behaviors. Understanding the demographic profiles of different geographic regions can help marketers tailor their messaging and product offerings to better resonate with target audiences.

Cultural Preferences: Cultural differences across regions can impact consumer preferences and buying habits. Marketing strategies should take into account cultural nuances and adapt messaging and branding to align with local customs and traditions.

Competitive Landscape: The presence of competitors in a given geographic area can affect sales distribution. Analyzing the competitive landscape can help marketers identify opportunities to differentiate their offerings and capture market share in specific regions.

Market Saturation: Some geographic regions may be more saturated with competitors or have reached market saturation for certain products or services. In such cases, marketers may need to explore untapped markets or focus on niche segments to drive sales growth.

Infrastructure and Accessibility: Factors such as transportation infrastructure, access to retail outlets, and online connectivity can influence consumer access to products and services. Marketing strategies should consider geographic accessibility and distribution channels to ensure products are easily available to target customers.

Seasonal and Environmental Factors: Seasonal variations and environmental factors can impact consumer demand and purchasing behavior. For example, regions with extreme weather conditions may have different product preferences or shopping habits. Marketing strategies should account for seasonal trends and environmental considerations to optimize sales opportunities.


Purchase Behavior:

High-value customers often exhibit specific purchase behaviors, such as:
High frequency of purchases: They make purchases more frequently than average customers.
High average order value (AOV): They tend to spend more per transaction compared to other customers.
Repeat purchases: They demonstrate loyalty by making repeat purchases over time.
Predictive analytics models can analyze historical purchase data to identify these patterns and predict future customer behavior.

High-value customers often engage more with the brand across various channels, including:
Online interactions: They may interact with the brand through website visits, social media engagement, and email communications.
Offline interactions: They may participate in events, loyalty programs, or store visits.
Analyzing customer engagement metrics helps identify opportunities to enhance customer experiences and strengthen relationships.
Customer Lifetime Value (CLV):

CLV is a predictive metric that estimates the total revenue a customer is expected to generate over their lifetime.
By calculating CLV, businesses can prioritize efforts to acquire and retain high-value customers who contribute the most to long-term revenue.
Feedback and Satisfaction:

High-value customers often provide valuable feedback and are more satisfied with their overall experience.
Implementing customer feedback mechanisms and satisfaction surveys helps identify areas for improvement and address customer concerns promptly.
To leverage this information and enhance customer loyalty and acquisition strategies:"""